services:
  device-management-service:
    image: 'device-management:latest'
    build:
      context: .
      dockerfile: Dockerfile
    container_name: device-management-service
    expose:
      - 8080
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - postgres
    links:
      - kafka
      - postgres
    environment:
      SPRING_DATASOURCE_URL : jdbc:postgresql://postgres:5432/device-management
      SPRING_DATASOURCE_USERNAME : myuser
      SPRING_DATASOURCE_PASSWORD : secret
      SPRING_KAFKA_BOOTSTRAP_SERVERS : kafka:9092

  postgres:
    image: 'postgres:14-alpine'
    container_name: postgres
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - 'POSTGRES_DB=device-management'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - 5432:5432

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    hostname: kafka
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.1
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
